name: Java CI/CD with Maven

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        server-id: github
        server-username: GITHUB_ACTOR
        server-password: ${{ secrets.GITHUB_TOKEN }}
        overwrite-settings: true

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Dockerize
      run: |
        docker build -t my-spring-app .
        docker tag my-spring-app:latest docker.io/theoneste61/my-spring-app:latest  # Replace your-docker-registry with your actual Docker registry URL or organization
      env:
        DOCKER_BUILDKIT: 1

    - name: Push Docker image
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io/theoneste61  # Replace your-docker-registry with your actual Docker registry URL or organization
        docker push docker.io/theoneste61/my-spring-app:latest  # Replace your-docker-registry with your actual Docker registry URL or organization
      env:
        DOCKER_BUILDKIT: 1

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          my-spring-app.jar
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v2
      with:
        name: release-artifact
        path: my-spring-app.jar

    - name: Set Release Version
      run: echo "RELEASE_VERSION=${{ steps.create_release.outputs.version }}" >> $GITHUB_ENV

    - name: Archive Release
      run: |
        mkdir -p release-${RELEASE_VERSION}
        mv my-spring-app.jar release-${RELEASE_VERSION}/my-spring-app.jar
        zip -r release-${RELEASE_VERSION}.zip release-${RELEASE_VERSION}
      env:
        RELEASE_VERSION: ${{ steps.create_release.outputs.version }}

    - name: Login to Docker Registry
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin your-docker-registry  # Replace your-docker-registry with your actual Docker registry URL or organization
      env:
        DOCKER_BUILDKIT: 1


        